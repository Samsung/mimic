[

{
  "name": "Array.prototype.filter",
  "function": [
    "return Array.prototype.filter.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,4,5], function f(a) { return a % 2 == 0 }, {}"
  ]
},

{
  "name": "Array.prototype.pop",
  "function": [
    "return Array.prototype.pop.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,4]"
  ]
},

{
  "name": "Array.prototype.shift",
  "function": [
    "var l = arg0.length;",
    "if (l == 0) {",
    "  arg0.length = 0",
    "  return undefined",
    "} else {",
    "  var first = arg0[0]",
    "  for (var i = 1; i < l; i++) {",
    "    if (i in arg0) {",
    "      var n = arg0[i]",
    "      arg0[i-1] = n",
    "    } else {",
    "      delete arg0[i-1]",
    "    }",
    "  }",
    "  delete arg0[l-1]",
    "  arg0.length = l-1",
    "  return first",
    "}"
  ],
  "loop": 0,
  "argnames": "arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,,5]"
  ]
},

{
  "name": "Array.prototype.forEach",
  "function": [
    "return Array.prototype.forEach.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3], function f(e) { return 7; }, {}"
  ]
},

{
  "name": "Array.prototype.map",
  "function": [
    "return Array.prototype.map.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,4], function f(e) { return e + 1; }, {}"
  ]
},

{
  "name": "Array.prototype.every",
  "function": [
    "return Array.prototype.every.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[0,5,2,20,3,23], function f(e) { return e < 10; }, {}"
  ]
},

{
  "name": "Array.prototype.some",
  "function": [
    "return Array.prototype.some.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3], function f(e) { return e < 10; }, {}",
    "[1,2,3], function f(e) { return e > 10; }, {}"
  ]
},

{
  "name": "Array.prototype.reduce",
  "function": [
    "return Array.prototype.reduce.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3], function f(previousValue, currentValue, index, array) { return previousValue + currentValue; }, 0"
  ]
},

{
  "name": "Array.prototype.push",
  "function": [
    "return Array.prototype.push.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 2,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3], 4, 5, 6",
    "[1,2,3], 4",
    "[1,2,3], 4, 5, 6, 7"
  ]
},

{
  "name": "Array.prototype.reduceRight",
  "function": [
    "return Array.prototype.reduceRight.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3], function f(previousValue, currentValue, index, array) { return previousValue + currentValue; }, 0"
  ]
},

{
  "name": "Array.prototype.indexOf",
  "function": [
    "return Array.prototype.indexOf.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 1,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,2], 2"
  ]
},

{
  "name": "Array.prototype.lastIndexOf",
  "function": [
    "return Array.prototype.lastIndexOf.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 1,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,2], 4"
  ]
},

{
  "name": "Array.prototype.slice",
  "function": [
    "return Array.prototype.slice.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,4,5], 2, 3"
  ]
},

{
  "name": "Array.prototype.slice2",
  "function": [
    "return Array.prototype.slice.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[1,2,3,4,5], 2"
  ]
},

{
  "name": "Array.prototype.reverse",
  "function": [
    "return Array.prototype.reverse.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[10,11,12,13,14]"
  ]
},

{
  "name": "Array.prototype.unshift",
  "function": [
    "return Array.prototype.unshift.apply(self, Array.prototype.slice.call(arguments, 1))"
  ],
  "loop": 0,
  "argnames": "self, arg0, arg1, arg2",
  "arguments": [
    "[10,11,12,13,14], 0"
  ]
},

{
  "name": "Array.handwritten.sum",
  "function": [
    "var result = 0; var l = a.length; for (var i = 0; i < l; i++) result += a[i]; return result;"
  ],
  "loop": 1,
  "argnames": "a",
  "arguments": [
    "[4,5,6]",
    "[1,2,3]"
  ]
},

{
  "name": "Array.handwritten.max",
  "function": [
    "var result = -Infinity; var l = a.length; for (var i = 0; i < l; i++) { var ai = a[i]; if (ai > result) result = ai; } return result;"
  ],
  "loop": 1,
  "argnames": "a",
  "arguments": [
    "[0,2,0]"
  ]
},

{
  "name": "Array.handwritten.min",
  "function": [
    "var result = Infinity; var l = a.length; for (var i = 0; i < l; i++) { var ai = a[i]; if (ai < result) result = ai; } return result;"
  ],
  "loop": 1,
  "argnames": "a",
  "arguments": [
    "[1,2,1]"
  ]
}

]
